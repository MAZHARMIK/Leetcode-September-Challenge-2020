class Solution {
public:
    vector<string> getTokens(string version) {
        stringstream v(version);
        string token_v = "";
        vector<string> version_tokens;
        while(getline(v, token_v, '.')) {
            version_tokens.push_back(token_v);
        }
        return version_tokens;
    }
    int compareVersion(string version1, string version2) {
        stringstream v1(version1);
        string token_v1 = "";
        vector<string> version1_tokens = getTokens(version1);
        vector<string> version2_tokens = getTokens(version2);  
        
        while(version1_tokens.size() > version2_tokens.size())
            version2_tokens.push_back("0");
        
        while(version2_tokens.size() > version1_tokens.size())
            version1_tokens.push_back("0");
        
        int n = version1_tokens.size();
        int  i = 0;
        while(i < n) {
            int a = stoi(version1_tokens[i]);
            int b = stoi(version2_tokens[i]);
            if(a > b)
                return 1;
            else if(b > a)
                return -1;
            else
                i++;
        }
        return 0;
    }
};
